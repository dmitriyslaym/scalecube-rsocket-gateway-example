{"id":"node_modules/rsocket-flowable/build/Single.js","dependencies":[{"name":"/Users/dmytrohryshchenko/projects/scalecube-memory-leak/package.json","includedInParent":true,"mtime":1605625582835},{"name":"/Users/dmytrohryshchenko/projects/scalecube-memory-leak/node_modules/rsocket-flowable/package.json","includedInParent":true,"mtime":1593079698671},{"name":"fbjs/lib/warning","loc":{"line":21,"column":23},"parent":"/Users/dmytrohryshchenko/projects/scalecube-memory-leak/node_modules/rsocket-flowable/build/Single.js","resolved":"/Users/dmytrohryshchenko/projects/scalecube-memory-leak/node_modules/fbjs/lib/warning.js"},{"name":"fbjs/lib/emptyFunction","loc":{"line":23,"column":29},"parent":"/Users/dmytrohryshchenko/projects/scalecube-memory-leak/node_modules/rsocket-flowable/build/Single.js","resolved":"/Users/dmytrohryshchenko/projects/scalecube-memory-leak/node_modules/fbjs/lib/emptyFunction.js"}],"generated":{"js":"/** Copyright (c) Facebook, Inc. and its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * \n */\n\n'use strict';\nObject.defineProperty(exports, '__esModule', {value: true});\n\nvar _warning = require('fbjs/lib/warning');\nvar _warning2 = _interopRequireDefault(_warning);\nvar _emptyFunction = require('fbjs/lib/emptyFunction');\nvar _emptyFunction2 = _interopRequireDefault(_emptyFunction);\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {default: obj};\n}\n\n/**\n                                                                                                                                                                                                                   * Represents a lazy computation that will either produce a value of type T\n                                                                                                                                                                                                                   * or fail with an error. Calling `subscribe()` starts the\n                                                                                                                                                                                                                   * computation and returns a subscription object, which has an `unsubscribe()`\n                                                                                                                                                                                                                   * method that can be called to prevent completion/error callbacks from being\n                                                                                                                                                                                                                   * invoked and, where supported, to also cancel the computation.\n                                                                                                                                                                                                                   * Implementations may optionally implement cancellation; if they do not\n                                                                                                                                                                                                                   * `cancel()` is a no-op.\n                                                                                                                                                                                                                   *\n                                                                                                                                                                                                                   * Note: Unlike Promise, callbacks (onComplete/onError) may be invoked\n                                                                                                                                                                                                                   * synchronously.\n                                                                                                                                                                                                                   *\n                                                                                                                                                                                                                   * Example:\n                                                                                                                                                                                                                   *\n                                                                                                                                                                                                                   * ```\n                                                                                                                                                                                                                   * const value = new Single(subscriber => {\n                                                                                                                                                                                                                   *   const id = setTimeout(\n                                                                                                                                                                                                                   *     () => subscriber.onComplete('Hello!'),\n                                                                                                                                                                                                                   *     250\n                                                                                                                                                                                                                   *   );\n                                                                                                                                                                                                                   *   // Optional: Call `onSubscribe` with a cancellation callback\n                                                                                                                                                                                                                   *   subscriber.onSubscribe(() => clearTimeout(id));\n                                                                                                                                                                                                                   * });\n                                                                                                                                                                                                                   *\n                                                                                                                                                                                                                   * // Start the computation. onComplete will be called after the timeout\n                                                                                                                                                                                                                   * // with 'hello'  unless `cancel()` is called first.\n                                                                                                                                                                                                                   * value.subscribe({\n                                                                                                                                                                                                                   *   onComplete: value => console.log(value),\n                                                                                                                                                                                                                   *   onError: error => console.error(error),\n                                                                                                                                                                                                                   *   onSubscribe: cancel => ...\n                                                                                                                                                                                                                   * });\n                                                                                                                                                                                                                   * ```\n                                                                                                                                                                                                                   */\nclass Single {\n  static of(value) {\n    return new Single(subscriber => {\n      subscriber.onSubscribe();\n      subscriber.onComplete(value);\n    });\n  }\n\n  static error(error) {\n    return new Single(subscriber => {\n      subscriber.onSubscribe();\n      subscriber.onError(error);\n    });\n  }\n\n  constructor(source) {\n    this._source = source;\n  }\n\n  subscribe(partialSubscriber) {\n    const subscriber = new FutureSubscriber(partialSubscriber);\n    try {\n      this._source(subscriber);\n    } catch (error) {\n      subscriber.onError(error);\n    }\n  }\n\n  flatMap(fn) {\n    return new Single(subscriber => {\n      let currentCancel;\n      const cancel = () => {\n        currentCancel && currentCancel();\n        currentCancel = null;\n      };\n      this._source({\n        onComplete: value => {\n          fn(value).subscribe({\n            onComplete: mapValue => {\n              subscriber.onComplete(mapValue);\n            },\n            onError: error => subscriber.onError(error),\n            onSubscribe: _cancel => {\n              currentCancel = _cancel;\n            },\n          });\n        },\n        onError: error => subscriber.onError(error),\n        onSubscribe: _cancel => {\n          currentCancel = _cancel;\n          subscriber.onSubscribe(cancel);\n        },\n      });\n    });\n  }\n\n  /**\n     * Return a new Single that resolves to the value of this Single applied to\n     * the given mapping function.\n     */\n  map(fn) {\n    return new Single(subscriber => {\n      return this._source({\n        onComplete: value => subscriber.onComplete(fn(value)),\n        onError: error => subscriber.onError(error),\n        onSubscribe: cancel => subscriber.onSubscribe(cancel),\n      });\n    });\n  }\n\n  then(successFn, errorFn) {\n    this.subscribe({\n      onComplete: successFn || _emptyFunction2.default,\n      onError: errorFn || _emptyFunction2.default,\n    });\n  }\n}\nexports.default = Single;\n\n/**\n                               * @private\n                               */\nclass FutureSubscriber {\n  constructor(subscriber) {\n    this._active = false;\n    this._started = false;\n    this._subscriber = subscriber || {};\n  }\n\n  onComplete(value) {\n    if (!this._active) {\n      (0, _warning2.default)(\n        false,\n        'Single: Invalid call to onComplete(): %s.',\n        this._started\n          ? 'onComplete/onError was already called'\n          : 'onSubscribe has not been called'\n      );\n\n      return;\n    }\n    this._active = false;\n    this._started = true;\n    try {\n      if (this._subscriber.onComplete) {\n        this._subscriber.onComplete(value);\n      }\n    } catch (error) {\n      if (this._subscriber.onError) {\n        this._subscriber.onError(error);\n      }\n    }\n  }\n\n  onError(error) {\n    if (this._started && !this._active) {\n      (0, _warning2.default)(\n        false,\n        'Single: Invalid call to onError(): %s.',\n        this._active\n          ? 'onComplete/onError was already called'\n          : 'onSubscribe has not been called'\n      );\n\n      return;\n    }\n    this._active = false;\n    this._started = true;\n    this._subscriber.onError && this._subscriber.onError(error);\n  }\n\n  onSubscribe(cancel) {\n    if (this._started) {\n      (0, _warning2.default)(\n        false,\n        'Single: Invalid call to onSubscribe(): already called.'\n      );\n      return;\n    }\n    this._active = true;\n    this._started = true;\n    try {\n      this._subscriber.onSubscribe &&\n        this._subscriber.onSubscribe(() => {\n          if (!this._active) {\n            return;\n          }\n          this._active = false;\n          cancel && cancel();\n        });\n    } catch (error) {\n      this.onError(error);\n    }\n  }\n}\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/rsocket-flowable/build/Single.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/rsocket-flowable/build/Single.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/rsocket-flowable/build/Single.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/rsocket-flowable/build/Single.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/rsocket-flowable/build/Single.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/rsocket-flowable/build/Single.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/rsocket-flowable/build/Single.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/rsocket-flowable/build/Single.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/rsocket-flowable/build/Single.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/rsocket-flowable/build/Single.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/rsocket-flowable/build/Single.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/rsocket-flowable/build/Single.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/rsocket-flowable/build/Single.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/rsocket-flowable/build/Single.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/rsocket-flowable/build/Single.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/rsocket-flowable/build/Single.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/rsocket-flowable/build/Single.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/rsocket-flowable/build/Single.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/rsocket-flowable/build/Single.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/rsocket-flowable/build/Single.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/rsocket-flowable/build/Single.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/rsocket-flowable/build/Single.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/rsocket-flowable/build/Single.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/rsocket-flowable/build/Single.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/rsocket-flowable/build/Single.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/rsocket-flowable/build/Single.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/rsocket-flowable/build/Single.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/rsocket-flowable/build/Single.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/rsocket-flowable/build/Single.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/rsocket-flowable/build/Single.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/rsocket-flowable/build/Single.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/rsocket-flowable/build/Single.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/rsocket-flowable/build/Single.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/rsocket-flowable/build/Single.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/rsocket-flowable/build/Single.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/rsocket-flowable/build/Single.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/rsocket-flowable/build/Single.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/rsocket-flowable/build/Single.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/rsocket-flowable/build/Single.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/rsocket-flowable/build/Single.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/rsocket-flowable/build/Single.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/rsocket-flowable/build/Single.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/rsocket-flowable/build/Single.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/rsocket-flowable/build/Single.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/rsocket-flowable/build/Single.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/rsocket-flowable/build/Single.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/rsocket-flowable/build/Single.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/rsocket-flowable/build/Single.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/rsocket-flowable/build/Single.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/rsocket-flowable/build/Single.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/rsocket-flowable/build/Single.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/rsocket-flowable/build/Single.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/rsocket-flowable/build/Single.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/rsocket-flowable/build/Single.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/rsocket-flowable/build/Single.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/rsocket-flowable/build/Single.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/rsocket-flowable/build/Single.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/rsocket-flowable/build/Single.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/rsocket-flowable/build/Single.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/rsocket-flowable/build/Single.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/rsocket-flowable/build/Single.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/rsocket-flowable/build/Single.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/rsocket-flowable/build/Single.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/rsocket-flowable/build/Single.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/rsocket-flowable/build/Single.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/rsocket-flowable/build/Single.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/rsocket-flowable/build/Single.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/rsocket-flowable/build/Single.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/rsocket-flowable/build/Single.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/rsocket-flowable/build/Single.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/rsocket-flowable/build/Single.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/rsocket-flowable/build/Single.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/rsocket-flowable/build/Single.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/rsocket-flowable/build/Single.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/rsocket-flowable/build/Single.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/rsocket-flowable/build/Single.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/rsocket-flowable/build/Single.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/rsocket-flowable/build/Single.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/rsocket-flowable/build/Single.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/rsocket-flowable/build/Single.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/rsocket-flowable/build/Single.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/rsocket-flowable/build/Single.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/rsocket-flowable/build/Single.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/rsocket-flowable/build/Single.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/rsocket-flowable/build/Single.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/rsocket-flowable/build/Single.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/rsocket-flowable/build/Single.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/rsocket-flowable/build/Single.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/rsocket-flowable/build/Single.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/rsocket-flowable/build/Single.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/rsocket-flowable/build/Single.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/rsocket-flowable/build/Single.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/rsocket-flowable/build/Single.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/rsocket-flowable/build/Single.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/rsocket-flowable/build/Single.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/rsocket-flowable/build/Single.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/rsocket-flowable/build/Single.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/rsocket-flowable/build/Single.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/rsocket-flowable/build/Single.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/rsocket-flowable/build/Single.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/rsocket-flowable/build/Single.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/rsocket-flowable/build/Single.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/rsocket-flowable/build/Single.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/rsocket-flowable/build/Single.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/rsocket-flowable/build/Single.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/rsocket-flowable/build/Single.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/rsocket-flowable/build/Single.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/rsocket-flowable/build/Single.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/rsocket-flowable/build/Single.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules/rsocket-flowable/build/Single.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules/rsocket-flowable/build/Single.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules/rsocket-flowable/build/Single.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules/rsocket-flowable/build/Single.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules/rsocket-flowable/build/Single.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules/rsocket-flowable/build/Single.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules/rsocket-flowable/build/Single.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules/rsocket-flowable/build/Single.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules/rsocket-flowable/build/Single.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules/rsocket-flowable/build/Single.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"node_modules/rsocket-flowable/build/Single.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"node_modules/rsocket-flowable/build/Single.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"node_modules/rsocket-flowable/build/Single.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"node_modules/rsocket-flowable/build/Single.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"node_modules/rsocket-flowable/build/Single.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"node_modules/rsocket-flowable/build/Single.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"node_modules/rsocket-flowable/build/Single.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"node_modules/rsocket-flowable/build/Single.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"node_modules/rsocket-flowable/build/Single.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"node_modules/rsocket-flowable/build/Single.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"node_modules/rsocket-flowable/build/Single.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"node_modules/rsocket-flowable/build/Single.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"node_modules/rsocket-flowable/build/Single.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"node_modules/rsocket-flowable/build/Single.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"node_modules/rsocket-flowable/build/Single.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"node_modules/rsocket-flowable/build/Single.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"node_modules/rsocket-flowable/build/Single.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"node_modules/rsocket-flowable/build/Single.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"node_modules/rsocket-flowable/build/Single.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"node_modules/rsocket-flowable/build/Single.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"node_modules/rsocket-flowable/build/Single.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"node_modules/rsocket-flowable/build/Single.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"node_modules/rsocket-flowable/build/Single.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"node_modules/rsocket-flowable/build/Single.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"node_modules/rsocket-flowable/build/Single.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"node_modules/rsocket-flowable/build/Single.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"node_modules/rsocket-flowable/build/Single.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"node_modules/rsocket-flowable/build/Single.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"node_modules/rsocket-flowable/build/Single.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"node_modules/rsocket-flowable/build/Single.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"node_modules/rsocket-flowable/build/Single.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"node_modules/rsocket-flowable/build/Single.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"node_modules/rsocket-flowable/build/Single.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"node_modules/rsocket-flowable/build/Single.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"node_modules/rsocket-flowable/build/Single.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"node_modules/rsocket-flowable/build/Single.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"node_modules/rsocket-flowable/build/Single.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}},{"source":"node_modules/rsocket-flowable/build/Single.js","original":{"line":157,"column":0},"generated":{"line":157,"column":0}},{"source":"node_modules/rsocket-flowable/build/Single.js","original":{"line":158,"column":0},"generated":{"line":158,"column":0}},{"source":"node_modules/rsocket-flowable/build/Single.js","original":{"line":159,"column":0},"generated":{"line":159,"column":0}},{"source":"node_modules/rsocket-flowable/build/Single.js","original":{"line":160,"column":0},"generated":{"line":160,"column":0}},{"source":"node_modules/rsocket-flowable/build/Single.js","original":{"line":161,"column":0},"generated":{"line":161,"column":0}},{"source":"node_modules/rsocket-flowable/build/Single.js","original":{"line":162,"column":0},"generated":{"line":162,"column":0}},{"source":"node_modules/rsocket-flowable/build/Single.js","original":{"line":163,"column":0},"generated":{"line":163,"column":0}},{"source":"node_modules/rsocket-flowable/build/Single.js","original":{"line":164,"column":0},"generated":{"line":164,"column":0}},{"source":"node_modules/rsocket-flowable/build/Single.js","original":{"line":165,"column":0},"generated":{"line":165,"column":0}},{"source":"node_modules/rsocket-flowable/build/Single.js","original":{"line":166,"column":0},"generated":{"line":166,"column":0}},{"source":"node_modules/rsocket-flowable/build/Single.js","original":{"line":167,"column":0},"generated":{"line":167,"column":0}},{"source":"node_modules/rsocket-flowable/build/Single.js","original":{"line":168,"column":0},"generated":{"line":168,"column":0}},{"source":"node_modules/rsocket-flowable/build/Single.js","original":{"line":169,"column":0},"generated":{"line":169,"column":0}},{"source":"node_modules/rsocket-flowable/build/Single.js","original":{"line":170,"column":0},"generated":{"line":170,"column":0}},{"source":"node_modules/rsocket-flowable/build/Single.js","original":{"line":171,"column":0},"generated":{"line":171,"column":0}},{"source":"node_modules/rsocket-flowable/build/Single.js","original":{"line":172,"column":0},"generated":{"line":172,"column":0}},{"source":"node_modules/rsocket-flowable/build/Single.js","original":{"line":173,"column":0},"generated":{"line":173,"column":0}},{"source":"node_modules/rsocket-flowable/build/Single.js","original":{"line":174,"column":0},"generated":{"line":174,"column":0}},{"source":"node_modules/rsocket-flowable/build/Single.js","original":{"line":175,"column":0},"generated":{"line":175,"column":0}},{"source":"node_modules/rsocket-flowable/build/Single.js","original":{"line":176,"column":0},"generated":{"line":176,"column":0}},{"source":"node_modules/rsocket-flowable/build/Single.js","original":{"line":177,"column":0},"generated":{"line":177,"column":0}},{"source":"node_modules/rsocket-flowable/build/Single.js","original":{"line":178,"column":0},"generated":{"line":178,"column":0}},{"source":"node_modules/rsocket-flowable/build/Single.js","original":{"line":179,"column":0},"generated":{"line":179,"column":0}},{"source":"node_modules/rsocket-flowable/build/Single.js","original":{"line":180,"column":0},"generated":{"line":180,"column":0}},{"source":"node_modules/rsocket-flowable/build/Single.js","original":{"line":181,"column":0},"generated":{"line":181,"column":0}},{"source":"node_modules/rsocket-flowable/build/Single.js","original":{"line":182,"column":0},"generated":{"line":182,"column":0}},{"source":"node_modules/rsocket-flowable/build/Single.js","original":{"line":183,"column":0},"generated":{"line":183,"column":0}},{"source":"node_modules/rsocket-flowable/build/Single.js","original":{"line":184,"column":0},"generated":{"line":184,"column":0}},{"source":"node_modules/rsocket-flowable/build/Single.js","original":{"line":185,"column":0},"generated":{"line":185,"column":0}},{"source":"node_modules/rsocket-flowable/build/Single.js","original":{"line":186,"column":0},"generated":{"line":186,"column":0}},{"source":"node_modules/rsocket-flowable/build/Single.js","original":{"line":187,"column":0},"generated":{"line":187,"column":0}},{"source":"node_modules/rsocket-flowable/build/Single.js","original":{"line":188,"column":0},"generated":{"line":188,"column":0}},{"source":"node_modules/rsocket-flowable/build/Single.js","original":{"line":189,"column":0},"generated":{"line":189,"column":0}},{"source":"node_modules/rsocket-flowable/build/Single.js","original":{"line":190,"column":0},"generated":{"line":190,"column":0}},{"source":"node_modules/rsocket-flowable/build/Single.js","original":{"line":191,"column":0},"generated":{"line":191,"column":0}},{"source":"node_modules/rsocket-flowable/build/Single.js","original":{"line":192,"column":0},"generated":{"line":192,"column":0}},{"source":"node_modules/rsocket-flowable/build/Single.js","original":{"line":193,"column":0},"generated":{"line":193,"column":0}},{"source":"node_modules/rsocket-flowable/build/Single.js","original":{"line":194,"column":0},"generated":{"line":194,"column":0}},{"source":"node_modules/rsocket-flowable/build/Single.js","original":{"line":195,"column":0},"generated":{"line":195,"column":0}},{"source":"node_modules/rsocket-flowable/build/Single.js","original":{"line":196,"column":0},"generated":{"line":196,"column":0}},{"source":"node_modules/rsocket-flowable/build/Single.js","original":{"line":197,"column":0},"generated":{"line":197,"column":0}},{"source":"node_modules/rsocket-flowable/build/Single.js","original":{"line":198,"column":0},"generated":{"line":198,"column":0}},{"source":"node_modules/rsocket-flowable/build/Single.js","original":{"line":199,"column":0},"generated":{"line":199,"column":0}},{"source":"node_modules/rsocket-flowable/build/Single.js","original":{"line":200,"column":0},"generated":{"line":200,"column":0}},{"source":"node_modules/rsocket-flowable/build/Single.js","original":{"line":201,"column":0},"generated":{"line":201,"column":0}},{"source":"node_modules/rsocket-flowable/build/Single.js","original":{"line":202,"column":0},"generated":{"line":202,"column":0}},{"source":"node_modules/rsocket-flowable/build/Single.js","original":{"line":203,"column":0},"generated":{"line":203,"column":0}},{"source":"node_modules/rsocket-flowable/build/Single.js","original":{"line":204,"column":0},"generated":{"line":204,"column":0}},{"source":"node_modules/rsocket-flowable/build/Single.js","original":{"line":205,"column":0},"generated":{"line":205,"column":0}},{"source":"node_modules/rsocket-flowable/build/Single.js","original":{"line":206,"column":0},"generated":{"line":206,"column":0}},{"source":"node_modules/rsocket-flowable/build/Single.js","original":{"line":207,"column":0},"generated":{"line":207,"column":0}},{"source":"node_modules/rsocket-flowable/build/Single.js","original":{"line":208,"column":0},"generated":{"line":208,"column":0}},{"source":"node_modules/rsocket-flowable/build/Single.js","original":{"line":209,"column":0},"generated":{"line":209,"column":0}},{"source":"node_modules/rsocket-flowable/build/Single.js","original":{"line":210,"column":0},"generated":{"line":210,"column":0}},{"source":"node_modules/rsocket-flowable/build/Single.js","original":{"line":211,"column":0},"generated":{"line":211,"column":0}},{"source":"node_modules/rsocket-flowable/build/Single.js","original":{"line":212,"column":0},"generated":{"line":212,"column":0}},{"source":"node_modules/rsocket-flowable/build/Single.js","original":{"line":213,"column":0},"generated":{"line":213,"column":0}},{"source":"node_modules/rsocket-flowable/build/Single.js","original":{"line":214,"column":0},"generated":{"line":214,"column":0}},{"source":"node_modules/rsocket-flowable/build/Single.js","original":{"line":215,"column":0},"generated":{"line":215,"column":0}},{"source":"node_modules/rsocket-flowable/build/Single.js","original":{"line":216,"column":0},"generated":{"line":216,"column":0}},{"source":"node_modules/rsocket-flowable/build/Single.js","original":{"line":217,"column":0},"generated":{"line":217,"column":0}}],"sources":{"node_modules/rsocket-flowable/build/Single.js":"/** Copyright (c) Facebook, Inc. and its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * \n */\n\n'use strict';\nObject.defineProperty(exports, '__esModule', {value: true});\n\nvar _warning = require('fbjs/lib/warning');\nvar _warning2 = _interopRequireDefault(_warning);\nvar _emptyFunction = require('fbjs/lib/emptyFunction');\nvar _emptyFunction2 = _interopRequireDefault(_emptyFunction);\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {default: obj};\n}\n\n/**\n                                                                                                                                                                                                                   * Represents a lazy computation that will either produce a value of type T\n                                                                                                                                                                                                                   * or fail with an error. Calling `subscribe()` starts the\n                                                                                                                                                                                                                   * computation and returns a subscription object, which has an `unsubscribe()`\n                                                                                                                                                                                                                   * method that can be called to prevent completion/error callbacks from being\n                                                                                                                                                                                                                   * invoked and, where supported, to also cancel the computation.\n                                                                                                                                                                                                                   * Implementations may optionally implement cancellation; if they do not\n                                                                                                                                                                                                                   * `cancel()` is a no-op.\n                                                                                                                                                                                                                   *\n                                                                                                                                                                                                                   * Note: Unlike Promise, callbacks (onComplete/onError) may be invoked\n                                                                                                                                                                                                                   * synchronously.\n                                                                                                                                                                                                                   *\n                                                                                                                                                                                                                   * Example:\n                                                                                                                                                                                                                   *\n                                                                                                                                                                                                                   * ```\n                                                                                                                                                                                                                   * const value = new Single(subscriber => {\n                                                                                                                                                                                                                   *   const id = setTimeout(\n                                                                                                                                                                                                                   *     () => subscriber.onComplete('Hello!'),\n                                                                                                                                                                                                                   *     250\n                                                                                                                                                                                                                   *   );\n                                                                                                                                                                                                                   *   // Optional: Call `onSubscribe` with a cancellation callback\n                                                                                                                                                                                                                   *   subscriber.onSubscribe(() => clearTimeout(id));\n                                                                                                                                                                                                                   * });\n                                                                                                                                                                                                                   *\n                                                                                                                                                                                                                   * // Start the computation. onComplete will be called after the timeout\n                                                                                                                                                                                                                   * // with 'hello'  unless `cancel()` is called first.\n                                                                                                                                                                                                                   * value.subscribe({\n                                                                                                                                                                                                                   *   onComplete: value => console.log(value),\n                                                                                                                                                                                                                   *   onError: error => console.error(error),\n                                                                                                                                                                                                                   *   onSubscribe: cancel => ...\n                                                                                                                                                                                                                   * });\n                                                                                                                                                                                                                   * ```\n                                                                                                                                                                                                                   */\nclass Single {\n  static of(value) {\n    return new Single(subscriber => {\n      subscriber.onSubscribe();\n      subscriber.onComplete(value);\n    });\n  }\n\n  static error(error) {\n    return new Single(subscriber => {\n      subscriber.onSubscribe();\n      subscriber.onError(error);\n    });\n  }\n\n  constructor(source) {\n    this._source = source;\n  }\n\n  subscribe(partialSubscriber) {\n    const subscriber = new FutureSubscriber(partialSubscriber);\n    try {\n      this._source(subscriber);\n    } catch (error) {\n      subscriber.onError(error);\n    }\n  }\n\n  flatMap(fn) {\n    return new Single(subscriber => {\n      let currentCancel;\n      const cancel = () => {\n        currentCancel && currentCancel();\n        currentCancel = null;\n      };\n      this._source({\n        onComplete: value => {\n          fn(value).subscribe({\n            onComplete: mapValue => {\n              subscriber.onComplete(mapValue);\n            },\n            onError: error => subscriber.onError(error),\n            onSubscribe: _cancel => {\n              currentCancel = _cancel;\n            },\n          });\n        },\n        onError: error => subscriber.onError(error),\n        onSubscribe: _cancel => {\n          currentCancel = _cancel;\n          subscriber.onSubscribe(cancel);\n        },\n      });\n    });\n  }\n\n  /**\n     * Return a new Single that resolves to the value of this Single applied to\n     * the given mapping function.\n     */\n  map(fn) {\n    return new Single(subscriber => {\n      return this._source({\n        onComplete: value => subscriber.onComplete(fn(value)),\n        onError: error => subscriber.onError(error),\n        onSubscribe: cancel => subscriber.onSubscribe(cancel),\n      });\n    });\n  }\n\n  then(successFn, errorFn) {\n    this.subscribe({\n      onComplete: successFn || _emptyFunction2.default,\n      onError: errorFn || _emptyFunction2.default,\n    });\n  }\n}\nexports.default = Single;\n\n/**\n                               * @private\n                               */\nclass FutureSubscriber {\n  constructor(subscriber) {\n    this._active = false;\n    this._started = false;\n    this._subscriber = subscriber || {};\n  }\n\n  onComplete(value) {\n    if (!this._active) {\n      (0, _warning2.default)(\n        false,\n        'Single: Invalid call to onComplete(): %s.',\n        this._started\n          ? 'onComplete/onError was already called'\n          : 'onSubscribe has not been called'\n      );\n\n      return;\n    }\n    this._active = false;\n    this._started = true;\n    try {\n      if (this._subscriber.onComplete) {\n        this._subscriber.onComplete(value);\n      }\n    } catch (error) {\n      if (this._subscriber.onError) {\n        this._subscriber.onError(error);\n      }\n    }\n  }\n\n  onError(error) {\n    if (this._started && !this._active) {\n      (0, _warning2.default)(\n        false,\n        'Single: Invalid call to onError(): %s.',\n        this._active\n          ? 'onComplete/onError was already called'\n          : 'onSubscribe has not been called'\n      );\n\n      return;\n    }\n    this._active = false;\n    this._started = true;\n    this._subscriber.onError && this._subscriber.onError(error);\n  }\n\n  onSubscribe(cancel) {\n    if (this._started) {\n      (0, _warning2.default)(\n        false,\n        'Single: Invalid call to onSubscribe(): already called.'\n      );\n      return;\n    }\n    this._active = true;\n    this._started = true;\n    try {\n      this._subscriber.onSubscribe &&\n        this._subscriber.onSubscribe(() => {\n          if (!this._active) {\n            return;\n          }\n          this._active = false;\n          cancel && cancel();\n        });\n    } catch (error) {\n      this.onError(error);\n    }\n  }\n}\n"},"lineCount":217}},"error":null,"hash":"b34877d37deb57e64308901b7b18d61c","cacheData":{"env":{}}}