{"id":"node_modules/rsocket-core/build/RSocketEncoding.js","dependencies":[{"name":"/Users/dmytrohryshchenko/projects/scalecube-memory-leak/package.json","includedInParent":true,"mtime":1605625582835},{"name":"/Users/dmytrohryshchenko/projects/scalecube-memory-leak/node_modules/rsocket-core/package.json","includedInParent":true,"mtime":1593079698672},{"name":"./RSocketBufferUtils","loc":{"line":22,"column":34},"parent":"/Users/dmytrohryshchenko/projects/scalecube-memory-leak/node_modules/rsocket-core/build/RSocketEncoding.js","resolved":"/Users/dmytrohryshchenko/projects/scalecube-memory-leak/node_modules/rsocket-core/build/RSocketBufferUtils.js"},{"name":"fbjs/lib/invariant","loc":{"line":23,"column":25},"parent":"/Users/dmytrohryshchenko/projects/scalecube-memory-leak/node_modules/rsocket-core/build/RSocketEncoding.js","resolved":"/Users/dmytrohryshchenko/projects/scalecube-memory-leak/node_modules/fbjs/lib/invariant.js"},{"name":"buffer","parent":"/Users/dmytrohryshchenko/projects/scalecube-memory-leak/node_modules/rsocket-core/build/RSocketEncoding.js","resolved":"/Users/dmytrohryshchenko/projects/scalecube-memory-leak/node_modules/buffer/index.js"}],"generated":{"js":"var Buffer = require(\"buffer\").Buffer;\n/** Copyright (c) Facebook, Inc. and its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * \n */\n\n'use strict';\nObject.defineProperty(exports, '__esModule', {value: true});\nexports.BufferEncoders = (exports.Utf8Encoders = (exports.BufferEncoder = (exports.UTF8Encoder = undefined)));\n\nvar _RSocketBufferUtils = require('./RSocketBufferUtils');\nvar _invariant = require('fbjs/lib/invariant');\nvar _invariant2 = _interopRequireDefault(_invariant);\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {default: obj};\n}\n\n/**\n                                                                                                                                                                                                   * Commonly used subset of the allowed Node Buffer Encoder types.\n                                                                                                                                                                                                   */\n\n/**\n                                                                                                                                                                                                       * The Encoders object specifies how values should be serialized/deserialized\n                                                                                                                                                                                                       * to/from binary.\n                                                                                                                                                                                                       */\n\nconst UTF8Encoder = (exports.UTF8Encoder = {\n  byteLength: value => (0, _RSocketBufferUtils.byteLength)(value, 'utf8'),\n  decode: (buffer, start, end) => {\n    return buffer.toString('utf8', start, end);\n  },\n  encode: (value, buffer, start, end) => {\n    (0, _invariant2.default)(\n      typeof value === 'string',\n      'RSocketEncoding: Expected value to be a string, got `%s`.',\n      value\n    );\n\n    buffer.write(value, start, end - start, 'utf8');\n    return end;\n  },\n});\n\nconst BufferEncoder = (exports.BufferEncoder = {\n  byteLength: value => {\n    (0, _invariant2.default)(\n      Buffer.isBuffer(value),\n      'RSocketEncoding: Expected value to be a buffer, got `%s`.',\n      value\n    );\n\n    return value.length;\n  },\n  decode: (buffer, start, end) => {\n    return buffer.slice(start, end);\n  },\n  encode: (value, buffer, start, end) => {\n    (0, _invariant2.default)(\n      Buffer.isBuffer(value),\n      'RSocketEncoding: Expected value to be a buffer, got `%s`.',\n      value\n    );\n\n    value.copy(buffer, start, 0, value.length);\n    return end;\n  },\n});\n\n/**\n        * Encode all values as UTF8 strings.\n        */\nconst Utf8Encoders = (exports.Utf8Encoders = {\n  data: UTF8Encoder,\n  dataMimeType: UTF8Encoder,\n  message: UTF8Encoder,\n  metadata: UTF8Encoder,\n  metadataMimeType: UTF8Encoder,\n  resumeToken: UTF8Encoder,\n});\n\n/**\n                               * Encode all values as buffers.\n                               */\nconst BufferEncoders = (exports.BufferEncoders = {\n  data: BufferEncoder,\n  dataMimeType: UTF8Encoder,\n  message: UTF8Encoder,\n  metadata: BufferEncoder,\n  metadataMimeType: UTF8Encoder,\n  resumeToken: BufferEncoder,\n});\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/rsocket-core/build/RSocketEncoding.js","original":{"line":1,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/rsocket-core/build/RSocketEncoding.js","original":{"line":2,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/rsocket-core/build/RSocketEncoding.js","original":{"line":3,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/rsocket-core/build/RSocketEncoding.js","original":{"line":4,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/rsocket-core/build/RSocketEncoding.js","original":{"line":5,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/rsocket-core/build/RSocketEncoding.js","original":{"line":6,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/rsocket-core/build/RSocketEncoding.js","original":{"line":7,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/rsocket-core/build/RSocketEncoding.js","original":{"line":8,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/rsocket-core/build/RSocketEncoding.js","original":{"line":9,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/rsocket-core/build/RSocketEncoding.js","original":{"line":10,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/rsocket-core/build/RSocketEncoding.js","original":{"line":11,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/rsocket-core/build/RSocketEncoding.js","original":{"line":12,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/rsocket-core/build/RSocketEncoding.js","original":{"line":13,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/rsocket-core/build/RSocketEncoding.js","original":{"line":14,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/rsocket-core/build/RSocketEncoding.js","original":{"line":15,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/rsocket-core/build/RSocketEncoding.js","original":{"line":16,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/rsocket-core/build/RSocketEncoding.js","original":{"line":17,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/rsocket-core/build/RSocketEncoding.js","original":{"line":18,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/rsocket-core/build/RSocketEncoding.js","original":{"line":19,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/rsocket-core/build/RSocketEncoding.js","original":{"line":20,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/rsocket-core/build/RSocketEncoding.js","original":{"line":21,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/rsocket-core/build/RSocketEncoding.js","original":{"line":22,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/rsocket-core/build/RSocketEncoding.js","original":{"line":23,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/rsocket-core/build/RSocketEncoding.js","original":{"line":24,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/rsocket-core/build/RSocketEncoding.js","original":{"line":25,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/rsocket-core/build/RSocketEncoding.js","original":{"line":26,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/rsocket-core/build/RSocketEncoding.js","original":{"line":27,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/rsocket-core/build/RSocketEncoding.js","original":{"line":28,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/rsocket-core/build/RSocketEncoding.js","original":{"line":29,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/rsocket-core/build/RSocketEncoding.js","original":{"line":30,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/rsocket-core/build/RSocketEncoding.js","original":{"line":31,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/rsocket-core/build/RSocketEncoding.js","original":{"line":32,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/rsocket-core/build/RSocketEncoding.js","original":{"line":33,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/rsocket-core/build/RSocketEncoding.js","original":{"line":34,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/rsocket-core/build/RSocketEncoding.js","original":{"line":35,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/rsocket-core/build/RSocketEncoding.js","original":{"line":36,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/rsocket-core/build/RSocketEncoding.js","original":{"line":37,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/rsocket-core/build/RSocketEncoding.js","original":{"line":38,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/rsocket-core/build/RSocketEncoding.js","original":{"line":39,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/rsocket-core/build/RSocketEncoding.js","original":{"line":40,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/rsocket-core/build/RSocketEncoding.js","original":{"line":41,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/rsocket-core/build/RSocketEncoding.js","original":{"line":42,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/rsocket-core/build/RSocketEncoding.js","original":{"line":43,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/rsocket-core/build/RSocketEncoding.js","original":{"line":44,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/rsocket-core/build/RSocketEncoding.js","original":{"line":45,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/rsocket-core/build/RSocketEncoding.js","original":{"line":46,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/rsocket-core/build/RSocketEncoding.js","original":{"line":47,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/rsocket-core/build/RSocketEncoding.js","original":{"line":48,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/rsocket-core/build/RSocketEncoding.js","original":{"line":49,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/rsocket-core/build/RSocketEncoding.js","original":{"line":50,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/rsocket-core/build/RSocketEncoding.js","original":{"line":51,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/rsocket-core/build/RSocketEncoding.js","original":{"line":52,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/rsocket-core/build/RSocketEncoding.js","original":{"line":53,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/rsocket-core/build/RSocketEncoding.js","original":{"line":54,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/rsocket-core/build/RSocketEncoding.js","original":{"line":55,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/rsocket-core/build/RSocketEncoding.js","original":{"line":56,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/rsocket-core/build/RSocketEncoding.js","original":{"line":57,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/rsocket-core/build/RSocketEncoding.js","original":{"line":58,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/rsocket-core/build/RSocketEncoding.js","original":{"line":59,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/rsocket-core/build/RSocketEncoding.js","original":{"line":60,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/rsocket-core/build/RSocketEncoding.js","original":{"line":61,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/rsocket-core/build/RSocketEncoding.js","original":{"line":62,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/rsocket-core/build/RSocketEncoding.js","original":{"line":63,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/rsocket-core/build/RSocketEncoding.js","original":{"line":64,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/rsocket-core/build/RSocketEncoding.js","original":{"line":65,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/rsocket-core/build/RSocketEncoding.js","original":{"line":66,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/rsocket-core/build/RSocketEncoding.js","original":{"line":67,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/rsocket-core/build/RSocketEncoding.js","original":{"line":68,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/rsocket-core/build/RSocketEncoding.js","original":{"line":69,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/rsocket-core/build/RSocketEncoding.js","original":{"line":70,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/rsocket-core/build/RSocketEncoding.js","original":{"line":71,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/rsocket-core/build/RSocketEncoding.js","original":{"line":72,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/rsocket-core/build/RSocketEncoding.js","original":{"line":73,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/rsocket-core/build/RSocketEncoding.js","original":{"line":74,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/rsocket-core/build/RSocketEncoding.js","original":{"line":75,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/rsocket-core/build/RSocketEncoding.js","original":{"line":76,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/rsocket-core/build/RSocketEncoding.js","original":{"line":77,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/rsocket-core/build/RSocketEncoding.js","original":{"line":78,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/rsocket-core/build/RSocketEncoding.js","original":{"line":79,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/rsocket-core/build/RSocketEncoding.js","original":{"line":80,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/rsocket-core/build/RSocketEncoding.js","original":{"line":81,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/rsocket-core/build/RSocketEncoding.js","original":{"line":82,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/rsocket-core/build/RSocketEncoding.js","original":{"line":83,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/rsocket-core/build/RSocketEncoding.js","original":{"line":84,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/rsocket-core/build/RSocketEncoding.js","original":{"line":85,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/rsocket-core/build/RSocketEncoding.js","original":{"line":86,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/rsocket-core/build/RSocketEncoding.js","original":{"line":87,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/rsocket-core/build/RSocketEncoding.js","original":{"line":88,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/rsocket-core/build/RSocketEncoding.js","original":{"line":89,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/rsocket-core/build/RSocketEncoding.js","original":{"line":90,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/rsocket-core/build/RSocketEncoding.js","original":{"line":91,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/rsocket-core/build/RSocketEncoding.js","original":{"line":92,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/rsocket-core/build/RSocketEncoding.js","original":{"line":93,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/rsocket-core/build/RSocketEncoding.js","original":{"line":94,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/rsocket-core/build/RSocketEncoding.js","original":{"line":95,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/rsocket-core/build/RSocketEncoding.js","original":{"line":96,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/rsocket-core/build/RSocketEncoding.js","original":{"line":97,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/rsocket-core/build/RSocketEncoding.js","original":{"line":98,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/rsocket-core/build/RSocketEncoding.js","original":{"line":99,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/rsocket-core/build/RSocketEncoding.js","original":{"line":100,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/rsocket-core/build/RSocketEncoding.js","original":{"line":101,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/rsocket-core/build/RSocketEncoding.js","original":{"line":102,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/rsocket-core/build/RSocketEncoding.js","original":{"line":103,"column":0},"generated":{"line":104,"column":0}}],"sources":{"node_modules/rsocket-core/build/RSocketEncoding.js":"/** Copyright (c) Facebook, Inc. and its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * \n */\n\n'use strict';\nObject.defineProperty(exports, '__esModule', {value: true});\nexports.BufferEncoders = (exports.Utf8Encoders = (exports.BufferEncoder = (exports.UTF8Encoder = undefined)));\n\nvar _RSocketBufferUtils = require('./RSocketBufferUtils');\nvar _invariant = require('fbjs/lib/invariant');\nvar _invariant2 = _interopRequireDefault(_invariant);\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {default: obj};\n}\n\n/**\n                                                                                                                                                                                                   * Commonly used subset of the allowed Node Buffer Encoder types.\n                                                                                                                                                                                                   */\n\n/**\n                                                                                                                                                                                                       * The Encoders object specifies how values should be serialized/deserialized\n                                                                                                                                                                                                       * to/from binary.\n                                                                                                                                                                                                       */\n\nconst UTF8Encoder = (exports.UTF8Encoder = {\n  byteLength: value => (0, _RSocketBufferUtils.byteLength)(value, 'utf8'),\n  decode: (buffer, start, end) => {\n    return buffer.toString('utf8', start, end);\n  },\n  encode: (value, buffer, start, end) => {\n    (0, _invariant2.default)(\n      typeof value === 'string',\n      'RSocketEncoding: Expected value to be a string, got `%s`.',\n      value\n    );\n\n    buffer.write(value, start, end - start, 'utf8');\n    return end;\n  },\n});\n\nconst BufferEncoder = (exports.BufferEncoder = {\n  byteLength: value => {\n    (0, _invariant2.default)(\n      Buffer.isBuffer(value),\n      'RSocketEncoding: Expected value to be a buffer, got `%s`.',\n      value\n    );\n\n    return value.length;\n  },\n  decode: (buffer, start, end) => {\n    return buffer.slice(start, end);\n  },\n  encode: (value, buffer, start, end) => {\n    (0, _invariant2.default)(\n      Buffer.isBuffer(value),\n      'RSocketEncoding: Expected value to be a buffer, got `%s`.',\n      value\n    );\n\n    value.copy(buffer, start, 0, value.length);\n    return end;\n  },\n});\n\n/**\n        * Encode all values as UTF8 strings.\n        */\nconst Utf8Encoders = (exports.Utf8Encoders = {\n  data: UTF8Encoder,\n  dataMimeType: UTF8Encoder,\n  message: UTF8Encoder,\n  metadata: UTF8Encoder,\n  metadataMimeType: UTF8Encoder,\n  resumeToken: UTF8Encoder,\n});\n\n/**\n                               * Encode all values as buffers.\n                               */\nconst BufferEncoders = (exports.BufferEncoders = {\n  data: BufferEncoder,\n  dataMimeType: UTF8Encoder,\n  message: UTF8Encoder,\n  metadata: BufferEncoder,\n  metadataMimeType: UTF8Encoder,\n  resumeToken: BufferEncoder,\n});\n"},"lineCount":104}},"error":null,"hash":"5c6dfe9517754772d93a6aeb1479eeef","cacheData":{"env":{}}}