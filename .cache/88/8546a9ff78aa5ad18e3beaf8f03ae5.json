{"id":"node_modules/rsocket-flowable/build/FlowableTimer.js","dependencies":[{"name":"/Users/dmytrohryshchenko/projects/scalecube-memory-leak/package.json","includedInParent":true,"mtime":1605625582835},{"name":"/Users/dmytrohryshchenko/projects/scalecube-memory-leak/node_modules/rsocket-flowable/package.json","includedInParent":true,"mtime":1593079698671},{"name":"./Flowable","loc":{"line":21,"column":24},"parent":"/Users/dmytrohryshchenko/projects/scalecube-memory-leak/node_modules/rsocket-flowable/build/FlowableTimer.js","resolved":"/Users/dmytrohryshchenko/projects/scalecube-memory-leak/node_modules/rsocket-flowable/build/Flowable.js"}],"generated":{"js":"/** Copyright (c) Facebook, Inc. and its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * \n */\n\n'use strict';\nObject.defineProperty(exports, '__esModule', {value: true});\nexports.every = every;\nvar _Flowable = require('./Flowable');\nvar _Flowable2 = _interopRequireDefault(_Flowable);\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {default: obj};\n}\n/**\n                                                                                                                                                                                                      * Returns a Publisher that provides the current time (Date.now()) every `ms`\n                                                                                                                                                                                                      * milliseconds.\n                                                                                                                                                                                                      *\n                                                                                                                                                                                                      * The timer is established on the first call to `request`: on each\n                                                                                                                                                                                                      * interval a value is published if there are outstanding requests,\n                                                                                                                                                                                                      * otherwise nothing occurs for that interval. This approach ensures\n                                                                                                                                                                                                      * that the interval between `onNext` calls is as regular as possible\n                                                                                                                                                                                                      * and means that overlapping `request` calls (ie calling again before\n                                                                                                                                                                                                      * the previous values have been vended) behaves consistently.\n                                                                                                                                                                                                      */ function every(\n  ms\n) {\n  return new _Flowable2.default(subscriber => {\n    let intervalId = null;\n    let pending = 0;\n    subscriber.onSubscribe({\n      cancel: () => {\n        if (intervalId != null) {\n          clearInterval(intervalId);\n          intervalId = null;\n        }\n      },\n      request: n => {\n        if (n < Number.MAX_SAFE_INTEGER) {\n          pending += n;\n        } else {\n          pending = Number.MAX_SAFE_INTEGER;\n        }\n        if (intervalId != null) {\n          return;\n        }\n        intervalId = setInterval(\n          () => {\n            if (pending > 0) {\n              if (pending !== Number.MAX_SAFE_INTEGER) {\n                pending--;\n              }\n              subscriber.onNext(Date.now());\n            }\n          },\n          ms\n        );\n      },\n    });\n  });\n}\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/rsocket-flowable/build/FlowableTimer.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/rsocket-flowable/build/FlowableTimer.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/rsocket-flowable/build/FlowableTimer.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/rsocket-flowable/build/FlowableTimer.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/rsocket-flowable/build/FlowableTimer.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/rsocket-flowable/build/FlowableTimer.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/rsocket-flowable/build/FlowableTimer.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/rsocket-flowable/build/FlowableTimer.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/rsocket-flowable/build/FlowableTimer.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/rsocket-flowable/build/FlowableTimer.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/rsocket-flowable/build/FlowableTimer.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/rsocket-flowable/build/FlowableTimer.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/rsocket-flowable/build/FlowableTimer.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/rsocket-flowable/build/FlowableTimer.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/rsocket-flowable/build/FlowableTimer.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/rsocket-flowable/build/FlowableTimer.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/rsocket-flowable/build/FlowableTimer.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/rsocket-flowable/build/FlowableTimer.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/rsocket-flowable/build/FlowableTimer.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/rsocket-flowable/build/FlowableTimer.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/rsocket-flowable/build/FlowableTimer.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/rsocket-flowable/build/FlowableTimer.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/rsocket-flowable/build/FlowableTimer.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/rsocket-flowable/build/FlowableTimer.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/rsocket-flowable/build/FlowableTimer.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/rsocket-flowable/build/FlowableTimer.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/rsocket-flowable/build/FlowableTimer.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/rsocket-flowable/build/FlowableTimer.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/rsocket-flowable/build/FlowableTimer.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/rsocket-flowable/build/FlowableTimer.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/rsocket-flowable/build/FlowableTimer.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/rsocket-flowable/build/FlowableTimer.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/rsocket-flowable/build/FlowableTimer.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/rsocket-flowable/build/FlowableTimer.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/rsocket-flowable/build/FlowableTimer.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/rsocket-flowable/build/FlowableTimer.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/rsocket-flowable/build/FlowableTimer.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/rsocket-flowable/build/FlowableTimer.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/rsocket-flowable/build/FlowableTimer.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/rsocket-flowable/build/FlowableTimer.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/rsocket-flowable/build/FlowableTimer.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/rsocket-flowable/build/FlowableTimer.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/rsocket-flowable/build/FlowableTimer.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/rsocket-flowable/build/FlowableTimer.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/rsocket-flowable/build/FlowableTimer.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/rsocket-flowable/build/FlowableTimer.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/rsocket-flowable/build/FlowableTimer.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/rsocket-flowable/build/FlowableTimer.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/rsocket-flowable/build/FlowableTimer.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/rsocket-flowable/build/FlowableTimer.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/rsocket-flowable/build/FlowableTimer.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/rsocket-flowable/build/FlowableTimer.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/rsocket-flowable/build/FlowableTimer.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/rsocket-flowable/build/FlowableTimer.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/rsocket-flowable/build/FlowableTimer.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/rsocket-flowable/build/FlowableTimer.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/rsocket-flowable/build/FlowableTimer.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/rsocket-flowable/build/FlowableTimer.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/rsocket-flowable/build/FlowableTimer.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/rsocket-flowable/build/FlowableTimer.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/rsocket-flowable/build/FlowableTimer.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/rsocket-flowable/build/FlowableTimer.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/rsocket-flowable/build/FlowableTimer.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/rsocket-flowable/build/FlowableTimer.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/rsocket-flowable/build/FlowableTimer.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/rsocket-flowable/build/FlowableTimer.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/rsocket-flowable/build/FlowableTimer.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/rsocket-flowable/build/FlowableTimer.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/rsocket-flowable/build/FlowableTimer.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/rsocket-flowable/build/FlowableTimer.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/rsocket-flowable/build/FlowableTimer.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/rsocket-flowable/build/FlowableTimer.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/rsocket-flowable/build/FlowableTimer.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}}],"sources":{"node_modules/rsocket-flowable/build/FlowableTimer.js":"/** Copyright (c) Facebook, Inc. and its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * \n */\n\n'use strict';\nObject.defineProperty(exports, '__esModule', {value: true});\nexports.every = every;\nvar _Flowable = require('./Flowable');\nvar _Flowable2 = _interopRequireDefault(_Flowable);\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {default: obj};\n}\n/**\n                                                                                                                                                                                                      * Returns a Publisher that provides the current time (Date.now()) every `ms`\n                                                                                                                                                                                                      * milliseconds.\n                                                                                                                                                                                                      *\n                                                                                                                                                                                                      * The timer is established on the first call to `request`: on each\n                                                                                                                                                                                                      * interval a value is published if there are outstanding requests,\n                                                                                                                                                                                                      * otherwise nothing occurs for that interval. This approach ensures\n                                                                                                                                                                                                      * that the interval between `onNext` calls is as regular as possible\n                                                                                                                                                                                                      * and means that overlapping `request` calls (ie calling again before\n                                                                                                                                                                                                      * the previous values have been vended) behaves consistently.\n                                                                                                                                                                                                      */ function every(\n  ms\n) {\n  return new _Flowable2.default(subscriber => {\n    let intervalId = null;\n    let pending = 0;\n    subscriber.onSubscribe({\n      cancel: () => {\n        if (intervalId != null) {\n          clearInterval(intervalId);\n          intervalId = null;\n        }\n      },\n      request: n => {\n        if (n < Number.MAX_SAFE_INTEGER) {\n          pending += n;\n        } else {\n          pending = Number.MAX_SAFE_INTEGER;\n        }\n        if (intervalId != null) {\n          return;\n        }\n        intervalId = setInterval(\n          () => {\n            if (pending > 0) {\n              if (pending !== Number.MAX_SAFE_INTEGER) {\n                pending--;\n              }\n              subscriber.onNext(Date.now());\n            }\n          },\n          ms\n        );\n      },\n    });\n  });\n}\n"},"lineCount":73}},"error":null,"hash":"8916d629e4098003f7efcb09b172f943","cacheData":{"env":{}}}